#       Copyright 2017 IBM Corp All Rights Reserved

#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at

#       http://www.apache.org/licenses/LICENSE-2.0

#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

#Deploy the pod
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: portfolio
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: portfolio
        solution: stock-trader
    spec:
      containers:
      - name: portfolio
        image: stocktraderdemo/portfolio:latest # Docker Hub
        imagePullPolicy: Always
        env:
          - name: JDBC_HOST
            valueFrom:
              secretKeyRef:
                name: db2
                key: host
          - name: JDBC_PORT
            valueFrom:
              secretKeyRef:
                name: db2
                key: port
          - name: JDBC_DB
            valueFrom:
              secretKeyRef:
                name: db2
                key: db
          - name: JDBC_ID
            valueFrom:
              secretKeyRef:
                name: db2
                key: id
          - name: JDBC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db2
                key: pwd
          - name: MQ_ID
            valueFrom:
              secretKeyRef:
                name: mq
                key: id
          - name: MQ_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mq   
                key: pwd
          - name: MQ_HOST
            valueFrom:
              secretKeyRef:
                name: mq
                key: host
          - name: MQ_PORT
            valueFrom:
              secretKeyRef:
                name: mq   
                key: port
          - name: MQ_CHANNEL
            valueFrom:
              secretKeyRef:
                name: mq   
                key: channel
          - name: MQ_QUEUE_MANAGER
            valueFrom:
              secretKeyRef:
                name: mq   
                key: queue-manager
          - name: MQ_QUEUE
            valueFrom:
               secretKeyRef:
                 name: mq   
                 key: queue
          - name: WATSON_URL
            valueFrom:
              secretKeyRef:
                name: watson
                key: url
          - name: WATSON_ID
            valueFrom:
              secretKeyRef:
                name: watson
                key: id
                optional: true
          - name: WATSON_PWD
            valueFrom:
              secretKeyRef:
                name: watson
                key: pwd
          - name: ODM_URL
            valueFrom:
              secretKeyRef:
                name: odm
                key: url
                optional: true
          - name: ODM_ID
            valueFrom:
              secretKeyRef:
                name: odm
                key: id
                optional: true
          - name: ODM_PWD
            valueFrom:
              secretKeyRef:
                name: odm
                key: pwd
                optional: true
          - name: KAFKA_TOPIC
            valueFrom:
              secretKeyRef:
                name: kafka
                key: topic
                optional: true
          - name: KAFKA_ADDRESS
            valueFrom:
              secretKeyRef:
                name: kafka
                key: address
                optional: true
          - name: KAFKA_USER
            valueFrom:
              secretKeyRef:
                name: kafka
                key: user
                optional: true
          - name: KAFKA_API_KEY
            valueFrom:
              secretKeyRef:
                name: kafka
                key: api-key
                optional: true
          - name: JWT_AUDIENCE
            valueFrom:
              secretKeyRef:
                name: jwt 
                key: audience
          - name: JWT_ISSUER
            valueFrom:
              secretKeyRef:
                name: jwt
                key: issuer
        ports:
          - containerPort: 9080
          - containerPort: 9443
---
#Deploy the service
apiVersion: v1
kind: Service
metadata:
  name: portfolio-service
  labels:
    app: portfolio
spec:
  type: NodePort
  ports:
    - name: http
      protocol: TCP
      port: 9080
      targetPort: 9080
    - name: https
      protocol: TCP
      port: 9443
      targetPort: 9443
  selector:
    app: portfolio
---   
#Configure the ingress 
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx"
    ingress.kubernetes.io/affinity: "cookie"
    ingress.kubernetes.io/session-cookie-name: "route"
    ingress.kubernetes.io/session-cookie-hash: "sha1"
    ingress.kubernetes.io/secure-backends: "true"
    ingress.kubernetes.io/app-root: "/portfolio"
  name: portfolio-ingress
spec:
  rules:
  - host:
    http:
      paths:
      - path: /portfolio
        backend:
          serviceName: portfolio-service
          servicePort: 9443

