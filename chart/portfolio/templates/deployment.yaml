#       Copyright 2017 IBM Corp All Rights Reserved

#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at

#       http://www.apache.org/licenses/LICENSE-2.0

#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "{{  .Chart.Name }}-deployment"
  labels:
    app: "{{ .Release.Name }}-{{ .Chart.Name }}"
    chart: '{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}'
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  template:
    metadata:
      labels:
        app: "{{  .Chart.Name }}-selector"
        version: "current"
    spec:
      volumes:
      - name: kafka-keystore-volume
        secret:
          secretName: kafka-keystore
      containers:
      - name: "{{  .Chart.Name  }}"
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        volumeMounts:
        - name: kafka-keystore-volume
          mountPath: /keystores
          readOnly: true
{{ if .Values.istio.enabled }}
        readinessProbe:
          httpGet:
            path: /portfolio/health
            port: 9080
          initialDelaySeconds: 20
{{ end }}
        resources:
          requests:
            cpu: "{{ .Values.image.resources.requests.cpu }}"
            memory: "{{ .Values.image.resources.requests.memory }}"
        env:
          - name: PORT
            value: "{{ .Values.service.servicePort }}"
          - name: APPLICATION_NAME
            value: "{{ .Release.Name }}"
          - name: JDBC_HOST
            valueFrom:
              secretKeyRef:
                name: db2
                key: host
          - name: JDBC_PORT
            valueFrom:
              secretKeyRef:
                name: db2
                key: port
          - name: JDBC_DB
            valueFrom:
              secretKeyRef:
                name: db2
                key: db
          - name: JDBC_ID
            valueFrom:
              secretKeyRef:
                name: db2
                key: id
          - name: JDBC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db2
                key: pwd
          - name: MQ_ID
            valueFrom:
              secretKeyRef:
                name: mq
                key: id
          - name: MQ_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mq
                key: pwd
          - name: MQ_HOST
            valueFrom:
              secretKeyRef:
                name: mq
                key: host
          - name: MQ_PORT
            valueFrom:
              secretKeyRef:
                name: mq
                key: port
          - name: MQ_CHANNEL
            valueFrom:
              secretKeyRef:
                name: mq
                key: channel
          - name: MQ_QUEUE_MANAGER
            valueFrom:
              secretKeyRef:
                name: mq
                key: queue-manager
          - name: MQ_QUEUE
            valueFrom:
              secretKeyRef:
                name: mq
                key: queue
          - name: WATSON_URL
            valueFrom:
              secretKeyRef:
                name: watson
                key: url
          - name: WATSON_ID
            valueFrom:
              secretKeyRef:
                name: watson
                key: id
                optional: true
          - name: WATSON_PWD
            valueFrom:
              secretKeyRef:
                name: watson
                key: pwd
          - name: ODM_URL
            valueFrom:
              secretKeyRef:
                name: odm
                key: url
                optional: true
          - name: ODM_ID
            valueFrom:
              secretKeyRef:
                name: odm
                key: id
                optional: true
          - name: ODM_PWD
            valueFrom:
              secretKeyRef:
                name: odm
                key: pwd
                optional: true
          - name: KAFKA_TOPIC
            valueFrom:
              secretKeyRef:
                name: kafka-extra
                key: topic
                optional: true
          - name: KAFKA_ADDRESS
            valueFrom:
              secretKeyRef:
                name: kafka-producer
                key: url
                optional: true
          - name: KAFKA_API_KEY
            valueFrom:
              secretKeyRef:
                name: kafka-producer
                key: apikey
                optional: true
          - name: KAFKA_USER
            value: {{ .Values.kafka.user }}
          - name: KAFKA_KEYSTORE
            value: {{ .Values.kafka.keystorePath }}
          - name: JWT_AUDIENCE
            valueFrom:
              secretKeyRef:
                name: jwt
                key: audience
          - name: JWT_ISSUER
            valueFrom:
              secretKeyRef:
                name: jwt
                key: issuer
{{- if .Values.generatedBindings.enabled }}
{{.Files.Get "bindings.yaml" | indent 10 }}
{{- end }}
